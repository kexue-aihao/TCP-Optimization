# 4000Mbps带宽4核24G内存VPS优化配置（抗丢包增强版）
# 核心目标：4000Mbps带宽充分利用 + 上下行对称 + 单线程性能 + 低延迟 + 减少丢包
# 硬件约束：4核CPU(Neoverse-N1)、24GB内存（严格控制内存占用≤70%）

# BDP计算（抗丢包适配）：
# 4000Mbps理论速度=500MB/s，RTT=20ms时BDP=10MB
# 缓冲区总占用控制在内存30%以内（约7.2GB），预留充足空间应对突发丢包

# TCP窗口核心配置（上下行对称+抗丢包）
net.ipv4.tcp_rmem = 4194304 67108864 134217728    # 接收窗口：4MB初始（加速恢复）-64MB-128MB（4Gbps比例调整）
net.ipv4.tcp_wmem = 4194304 67108864 134217728    # 发送窗口：与接收严格对称
net.core.rmem_default = 33554432                  # 接收默认32MB（对称分配）
net.core.wmem_default = 33554432                  # 发送默认32MB（对称分配）
net.core.rmem_max = 134217728                     # 接收最大128MB（24G内存安全上限）
net.core.wmem_max = 134217728                     # 发送最大128MB（与接收对称）
net.ipv4.tcp_window_scaling = 1
net.ipv4.tcp_moderate_rcvbuf = 1                  # 动态调整缓冲区（根据丢包自适应）
net.ipv4.tcp_adv_win_scale = -2                   # 激进窗口扩展（Neoverse-N1多核支撑）
net.ipv4.tcp_low_latency = 1                      # 低延迟模式（ARM架构优化）
net.ipv4.tcp_sack = 1                             # 启用SACK（精准定位丢包）
net.ipv4.tcp_fack = 1                             # 转发确认（辅助SACK）
net.ipv4.tcp_timestamps = 1                       # 时间戳（SACK依赖）

# BBR拥塞控制（4000Mbps抗丢包调优）
net.ipv4.tcp_congestion_control = bbr
net.ipv4.tcp_bbr_high_gain = 3000000000           # 适配Neoverse-N1的增益（平衡速度与丢包）
net.ipv4.tcp_bbr_rtt_scaling = 1                  # 高RTT敏感度（4核快速响应丢包）
net.ipv4.tcp_slow_start_after_idle = 0
net.ipv4.tcp_no_metrics_save = 1                  # 减少单线程开销
net.ipv4.tcp_bbr_min_rtt_window = 400000          # RTT采样窗口（Neoverse-N1多核适配）
net.ipv4.tcp_bbr_probe_rtt_mode = 1               # 启用RTT探测（预防路径拥塞丢包）

# 单线程性能与丢包恢复
net.ipv4.tcp_limit_output_bytes = 33554432        # 单次发送32MB（4核Neoverse-N1处理能力内）
net.ipv4.tcp_single_stream_allowance = 268435456  # 单流限制256MB（匹配4核）
net.ipv4.tcp_push_pending_frames = 1              # 立即发送（减少缓冲延迟）
net.ipv4.tcp_nodelay = 1                          # 禁用Nagle（小包无延迟）
net.ipv4.tcp_autocorking = 0                      # 禁用自动合并（避免人为延迟）
net.ipv4.tcp_reordering = 8                       # 提高乱序容忍（4Gbps路径更易乱序）
net.ipv4.tcp_early_retrans = 3                    # 早期重传（加速丢包恢复）
net.ipv4.tcp_lost_retransmit = 1                  # 丢包后立即重传

# 网络设备队列（防丢包核心，fq_pie适配）
net.core.netdev_max_backlog = 80000               # 接收队列8万（4Gbps为10Gbps的2/5）
net.core.netdev_budget = 1200                     # 单次中断处理包数（4核适配）
net.core.netdev_budget_usecs = 1500               # 中断处理时间限制（Neoverse-N1效率优化）
net.core.dev_weight = 1024                        # 设备权重（4核均衡负载）
net.core.optmem_max = 16777216                    # 选项内存16MB（4核4Gbps适配）
net.core.busy_poll = 250                          # 忙轮询（Neoverse-N1多核高效利用）
net.core.busy_read = 250                          # 忙读（平衡CPU与延迟）
net.core.default_qdisc = fq_pie                   # 启用fq_pie（替代fq_codel）
# FQ_PIE核心参数（4000Mbps抗丢包优化）
net.core.fq_pie.target_delay = 5ms                # 目标延迟5ms（Neoverse-N1低延迟优势）
net.core.fq_pie.max_queue_size = 8000             # 最大队列8000包（4Gbps突发缓冲）
net.core.fq_pie.packet_limit = 3000               # 单流包限制（防止单一流占满队列）
net.core.fq_pie.alpha = 5                         # 低惩罚系数（减少正常波动丢包）
net.core.fq_pie.beta = 10                         # 与alpha匹配（平滑拥塞响应）
net.core.fq_pie.max_burst = 40                    # 允许突发包数（适配4Gbps短脉冲）

# 连接管理（减少连接异常丢包）
net.core.somaxconn = 262144                       # 连接队列26万（4核24G内存支撑）
net.ipv4.tcp_max_syn_backlog = 131072             # SYN队列13万（按比例调整）
net.ipv4.tcp_max_tw_buckets = 2000000             # TIME_WAIT桶200万（24G内存可控）
net.ipv4.tcp_fin_timeout = 2                      # 保持短FIN等待（4核快速处理）
net.ipv4.tcp_tw_reuse = 1                         # 重用TIME_WAIT（节省资源）
net.ipv4.tcp_orphan_retries = 2                   # 增加重试（减少意外丢包）
net.ipv4.tcp_abort_on_overflow = 0                # 溢出时缓冲而非直接丢包
net.ipv4.tcp_dsack = 1                            # 重复SACK（精准定位丢包）
net.ipv4.tcp_syncookies = 1                       # 防御SYN泛洪丢包

# 超时与重传（加速丢包恢复）
net.ipv4.tcp_keepalive_time = 20                  # 保活探测20秒（4核资源充足）
net.ipv4.tcp_keepalive_intvl = 2                  # 探测间隔2秒
net.ipv4.tcp_keepalive_probes = 3                 # 探测次数3次
net.ipv4.ip_local_port_range = 1024 65535
net.ipv4.tcp_retries1 = 2                         # 初始重传等待减少
net.ipv4.tcp_retries2 = 8                         # 最大重传次数增加
net.ipv4.tcp_rto_min = 150                        # 最小重传超时150ms（更快恢复）
net.ipv4.tcp_rto_max = 1500                       # 最大重传超时1.5s

# 内存管理（24G内存抗丢包保障）
vm.swappiness = 0                                 # 禁用交换（24G内存充足，交换=高延迟）
vm.min_free_kbytes = 1048576                      # 保留1GB空闲内存（应对突发）
vm.dirty_ratio = 15                               # 脏页比率15%（提高内存利用率）
vm.dirty_background_ratio = 7                     # 后台脏页7%
vm.dirty_writeback_centisecs = 50                 # 50ms刷盘一次（平衡I/O与延迟）
vm.page-cluster = 0                               # 禁用预读（消除延迟）
vm.max_map_count = 1048576                        # 映射限制（24G适配）

# 系统限制（4核支撑配置）
fs.file-max = 4194304                             # 文件描述符400万（24G内存适配）
fs.nr_open = 8388608                              # 进程描述符800万
net.ipv4.tcp_max_orphans = 131072                 # 孤儿连接限制（4核适配）

# 处理器调度（4核抗丢包优化，适配Neoverse-N1）
kernel.sched_migration_cost_ns = 150000           # 进程迁移成本（4核均衡负载）
kernel.sched_autogroup_enabled = 0                # 禁用自动分组
kernel.sched_latency_ns = 1000000                 # 调度延迟1ms（Neoverse-N1快速响应）
kernel.sched_wakeup_granularity_ns = 200000       # 唤醒粒度0.2ms（多核精细调度）
kernel.softirq_prio = 6                           # 提高软中断优先级（确保丢包处理）

# 硬件加速（4核扛4000Mbps关键，Neoverse-N1特性适配）
net.ipv4.tcp_tso = 1                              # 发送分段卸载（ARM架构高效支持）
net.ipv4.tcp_gro = 1                              # 接收聚合卸载
net.ipv4.tcp_lro = 1                              # 大型接收卸载（Neoverse-N1支持良好）
net.ipv4.tcp_ecn = 2                              # 启用ECN（用标记替代丢包）
net.core.netdev_features = 0xffffffff             # 启用所有支持的ARM网卡特性
