# 4Gbps带宽4核24G内存VPS优化配置（抗丢包增强版）
# 核心目标：解决丢包问题 + 上下行对称 + 单线程性能 + 极致低延迟
# 优化重点：增强丢包检测、加速重传恢复、优化队列管理

# BDP与缓冲区优化（抗丢包基础）
# 保留对称缓冲区，增加动态调整能力以应对突发丢包
net.ipv4.tcp_rmem = 16777216 268435456 536870912  # 初始缓冲区加倍（16MB），加速丢包后恢复
net.ipv4.tcp_wmem = 16777216 268435456 536870912
net.core.rmem_default = 67108864
net.core.wmem_default = 67108864
net.core.rmem_max = 536870912
net.core.wmem_max = 536870912
net.ipv4.tcp_window_scaling = 1
net.ipv4.tcp_moderate_rcvbuf = 1                  # 强化动态缓冲区调整（根据丢包自动适配）
net.ipv4.tcp_adv_win_scale = -2
net.ipv4.tcp_low_latency = 1
net.ipv4.tcp_sack = 1                             # 增强：SACK是丢包恢复的核心机制
net.ipv4.tcp_fack = 1                             # 启用转发确认（辅助SACK定位丢包）
net.ipv4.tcp_timestamps = 1                       # 必须启用（SACK依赖时间戳判断丢包位置）

# BBR拥塞控制（抗丢包调优）
net.ipv4.tcp_congestion_control = bbr
net.ipv4.tcp_bbr_high_gain = 2800000000           # 降低增益（减少因激进发送导致的丢包）
net.ipv4.tcp_bbr_rtt_scaling = 1
net.ipv4.tcp_slow_start_after_idle = 0
net.ipv4.tcp_no_metrics_save = 1
net.ipv4.tcp_bbr_bw_high_thresh = 1000000000
net.ipv4.tcp_bbr_min_rtt_window = 1000000         # 缩短最小RTT采样窗口（更快检测丢包）
net.ipv4.tcp_bbr_probe_rtt_mode = 1               # 启用RTT探测模式（定期验证路径是否丢包）

# 单线程与丢包恢复优化
net.ipv4.tcp_limit_output_bytes = 33554432
net.ipv4.tcp_single_stream_allowance = 268435456
net.ipv4.tcp_push_pending_frames = 1
net.ipv4.tcp_nodelay = 1
net.ipv4.tcp_autocorking = 0
net.ipv4.tcp_invalid_ratelimit = 500
net.ipv4.tcp_recvmsg_coalesce = 1
net.ipv4.tcp_reordering = 8                       # 容忍更高的乱序（减少误判丢包）
net.ipv4.tcp_early_retrans = 3                    # 启用早期重传（丢包后更快触发重传）
net.ipv4.tcp_lost_retransmit = 1                  # 丢包后立即重传（不等待超时）

# 网络设备队列（防丢包核心）
net.core.netdev_max_backlog = 150000              # 适度增加队列长度（避免突发流量直接丢包）
net.core.netdev_budget = 800                      # 增加单次中断处理包数（减少队列积压）
net.core.netdev_budget_usecs = 3000               # 延长中断处理时间（确保队列不堆积）
net.core.dev_weight = 1024
net.core.optmem_max = 16777216
net.core.busy_poll = 500
net.core.busy_read = 500
net.core.default_qdisc = fq_codel
net.core.fq_codel.target = 3ms                    # 轻微放宽目标延迟（减少为控延迟导致的丢包）
net.core.fq_codel.interval = 100ms                # 延长检查间隔（避免频繁丢包）
net.core.fq_codel.quantum = 1514
net.core.fq_codel.limit = 30000                   # 增加队列限制（突发流量缓冲空间）
net.core.fq_codel.flows = 32768                   # 增加流数量（避免流竞争导致的丢包）
net.core.fq_codel.burst = 100                     # 允许短时间突发（减少正常波动丢包）

# 连接管理（减少连接异常导致的丢包）
net.core.somaxconn = 262144
net.ipv4.tcp_max_syn_backlog = 131072
net.ipv4.tcp_max_tw_buckets = 2000000
net.ipv4.tcp_fin_timeout = 2                      # 适度延长FIN等待（减少半连接丢包）
net.ipv4.tcp_tw_reuse = 1
net.ipv4.tcp_orphan_retries = 1                   # 轻微增加孤儿重试（减少意外丢包）
net.ipv4.tcp_abort_on_overflow = 0                # 溢出时不立即终止（用队列缓冲替代丢包）
net.ipv4.tcp_dsack = 1                            # 增强重复确认（更精准定位丢包）
net.ipv4.tcp_syncookies = 1                       # 启用SYN cookies（防御SYN泛洪导致的丢包）

# 超时与重传（加速丢包恢复）
net.ipv4.tcp_keepalive_time = 15
net.ipv4.tcp_keepalive_intvl = 1
net.ipv4.tcp_keepalive_probes = 2
net.ipv4.ip_local_port_range = 1024 65535
net.ipv4.tcp_retries1 = 2                         # 减少初始重传等待（更快检测丢包）
net.ipv4.tcp_retries2 = 10                        # 增加最大重传次数（提升恢复概率）
net.ipv4.tcp_rto_min = 200                        # 最小重传超时200ms（加速恢复）
net.ipv4.tcp_rto_max = 2000                       # 最大重传超时2s（避免过度等待）

# 内存管理（避免内存不足导致的丢包）
vm.swappiness = 0
vm.min_free_kbytes = 1572864                      # 保留1.5G空闲内存（增加抗突发能力）
vm.dirty_ratio = 10
vm.dirty_background_ratio = 5
vm.dirty_writeback_centisecs = 5
vm.page-cluster = 0
vm.max_map_count = 1048576
vm.zone_reclaim_mode = 0
vm.mmap_min_addr = 4096                           # 允许低地址映射（避免内存分配失败丢包）

# 系统限制（支撑高并发下无丢包）
fs.file-max = 4194304
fs.nr_open = 8388608
net.ipv4.ip_local_reserved_ports = 0
net.ipv4.tcp_max_orphans = 131072                 # 增加孤儿连接限制（减少因连接数超限制丢包）

# 处理器调度（确保丢包处理线程资源）
kernel.sched_migration_cost_ns = 200000
kernel.sched_autogroup_enabled = 0
kernel.sched_latency_ns = 1000000
kernel.sched_wakeup_granularity_ns = 250000
kernel.sched_child_runs_first = 1
kernel.sched_domain.cpu_domains = 1
kernel.sched_load_balance = 1
kernel.softirq_prio = 6                           # 提高软中断优先级（确保丢包处理不被阻塞）

# 硬件加速与驱动优化（减少底层丢包）
net.ipv4.tcp_tso = 1
net.ipv4.tcp_gro = 1
net.ipv4.tcp_lro = 1
net.ipv4.tcp_seg_timeout = 5
net.core.netdev_features = 0xffffffff             # 启用所有支持的网卡特性（减少硬件丢包）
net.ipv4.tcp_ecn = 2                              # 启用ECN（显式拥塞通知，用标记替代丢包）
