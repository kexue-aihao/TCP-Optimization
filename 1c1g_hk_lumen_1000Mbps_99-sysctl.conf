# 1Gbps带宽1核1G内存VPS优化配置
# 核心目标：单线程性能最大化 + 极致降低RTT延迟
# 硬件约束：1核CPU、1GB内存、1Gbps网络带宽

# BDP计算（1Gbps低延迟场景）：
# 1Gbps理论速度=125MB/s，RTT=20ms时BDP=2.5MB
# 窗口控制在内存占比15%以内（约150MB），优先保障超低延迟

# TCP窗口核心配置（超低延迟导向）
net.ipv4.tcp_rmem = 2097152 26214400 67108864     # 初始2MB（快速启动），最大64MB（1G内存安全值）
net.ipv4.tcp_wmem = 2097152 26214400 67108864
net.core.rmem_default = 16777216                  # 默认16MB（平衡需求）
net.core.wmem_default = 16777216
net.core.rmem_max = 67108864                      # 最大64MB（满足1Gbps@20ms BDP需求）
net.core.wmem_max = 67108864
net.ipv4.tcp_window_scaling = 1
net.ipv4.tcp_moderate_rcvbuf = 1
net.ipv4.tcp_adv_win_scale = -4                   # 更激进窗口扩展（最小化RTT影响）
net.ipv4.tcp_low_latency = 1                      # 启用低延迟模式（核心开关）

# BBR拥塞控制（超低延迟特化）
net.ipv4.tcp_congestion_control = bbr
net.ipv4.tcp_bbr_high_gain = 2500000000           # 最低增益（优先控制延迟）
net.ipv4.tcp_bbr_rtt_scaling = 1                  # 最高RTT敏感度（实时响应）
net.ipv4.tcp_slow_start_after_idle = 0
net.ipv4.tcp_no_metrics_save = 1                  # 禁用metrics保存（减少单线程开销）

# 单线程性能强化（1核1G专属）
net.ipv4.tcp_limit_output_bytes = 8388608         # 单次发送8MB（1核高效处理范围）
net.ipv4.tcp_single_stream_allowance = 67108864   # 单流限制64MB（匹配1Gbps带宽）
net.ipv4.tcp_push_pending_frames = 1              # 立即发送缓冲帧（消除等待延迟）
net.ipv4.tcp_nodelay = 1                          # 禁用Nagle算法（小包即时发送）
net.ipv4.tcp_autocorking = 0                      # 禁用自动合并（避免人为延迟）
net.ipv4.tcp_invalid_ratelimit = 2000             # 降低无效包处理频率（节省CPU）

# 网络设备队列（防延迟累积）
net.core.netdev_max_backlog = 50000               # 队列长度5万（1Gbps适配，避免过长）
net.core.dev_weight = 512                         # 设备权重（1核高效处理）
net.core.optmem_max = 4194304                     # 选项内存4MB（单线程足够）
net.core.busy_poll = 1000                         # 最高忙轮询（1核专注处理网络）
net.core.busy_read = 1000                         # 最高忙读（最小化处理延迟）
net.core.default_qdisc = fq_codel                 # FQ_Codel主动控延迟
net.core.fq_codel.target = 3ms                    # 目标延迟3ms（更严格控制）
net.core.fq_codel.interval = 50ms                 # 间隔检查50ms

# 连接管理（1G内存精简版）
net.core.somaxconn = 32768                        # 连接队列3.2万（1核可承载）
net.ipv4.tcp_max_syn_backlog = 16384              # SYN队列1.6万
net.ipv4.tcp_max_tw_buckets = 500000              # TIME_WAIT桶50万（内存可控）
net.ipv4.tcp_fin_timeout = 1                      # FIN等待1秒（最快回收）
net.ipv4.tcp_tw_reuse = 1                         # 重用TIME_WAIT连接
net.ipv4.tcp_orphan_retries = 0                   # 禁用孤儿重试（节省资源）
net.ipv4.tcp_abort_on_overflow = 1                # 溢出立即终止（避免延迟累积）

# 超时与保活（快速检测）
net.ipv4.tcp_keepalive_time = 15                  # 保活探测15秒（更早发现死连接）
net.ipv4.tcp_keepalive_intvl = 1                  # 探测间隔1秒
net.ipv4.tcp_keepalive_probes = 2                 # 仅探测2次（快速释放）
net.ipv4.ip_local_port_range = 1024 65535         # 全端口范围（单线程多连接）

# 内存管理（1G内存极致低延迟）
vm.swappiness = 0                                 # 禁用交换（交换=高延迟）
vm.min_free_kbytes = 102400                       # 保留100MB空闲内存（1G的10%）
vm.dirty_ratio = 3                                # 脏页上限3%（极低，避免I/O阻塞）
vm.dirty_background_ratio = 1                     # 后台脏页1%（尽早刷盘）
vm.dirty_writeback_centisecs = 5                  # 5ms刷盘一次（极致低延迟）
vm.page-cluster = 0                               # 禁用页面预读（消除预读延迟）
vm.max_map_count = 65536                          # 映射限制6.5万（1G内存适配）

# 系统限制（1核精简版）
fs.file-max = 524288                              # 文件描述符50万（1核够用）
fs.nr_open = 1048576                             # 进程描述符100万

# 处理器调度（1核专属优化）
kernel.sched_migration_cost_ns = 1000000000       # 极高迁移成本（1核无需迁移）
kernel.sched_autogroup_enabled = 0                # 禁用自动分组（单线程独占核心）
kernel.sched_latency_ns = 250000                  # 调度延迟0.25ms（1核最快响应）
kernel.sched_wakeup_granularity_ns = 50000        # 唤醒粒度0.05ms（极致响应）
kernel.sched_child_runs_first = 1                 # 子进程优先（减少阻塞）

# 硬件加速（1核减负关键）
net.ipv4.tcp_tso = 1                              # 分段卸载（节省CPU）
net.ipv4.tcp_gro = 1                              # 接收聚合（减少处理次数）
net.ipv4.tcp_lro = 1                              # 大型接收卸载（1核必备）
net.ipv4.tcp_seg_timeout = 5                      # 分段超时5ms（降低延迟）
