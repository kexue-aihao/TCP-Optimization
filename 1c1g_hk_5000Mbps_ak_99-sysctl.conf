# 5000Mbps带宽1GB内存机器专用优化配置
# 核心原则：在1GB内存限制下最大化5Gbps性能，避免资源耗尽

# BDP计算（内存适配版）：
# 5000Mbps理论速度=625MB/s，但受限于1GB内存
# 调整窗口至内存可承受范围，RTT按20ms计算，窗口上限控制在总内存30%以内

# 1. TCP窗口核心配置（内存敏感调整）
net.ipv4.tcp_rmem = 524288 16777216 31457280   # 接收窗口：512KB - 16MB - 30MB
net.ipv4.tcp_wmem = 524288 16777216 31457280   # 发送窗口：512KB - 16MB - 30MB
net.core.rmem_default = 8388608                # 默认接收缓冲区8MB
net.core.wmem_default = 8388608                # 默认发送缓冲区8MB
net.core.rmem_max = 31457280                   # 最大接收缓冲区30MB（内存安全值）
net.core.wmem_max = 31457280                   # 最大发送缓冲区30MB（内存安全值）
net.ipv4.tcp_window_scaling = 1                # 启用窗口缩放
net.ipv4.tcp_moderate_rcvbuf = 1                # 启用自动调整缓冲区（内存保护）
net.ipv4.tcp_adv_win_scale = 2                 # 降低窗口缩放因子

# 2. BBR拥塞控制（内存适配版）
net.ipv4.tcp_congestion_control = bbr
net.ipv4.tcp_bbr_high_gain = 2500000000        # 降低增益（减少内存占用）
net.ipv4.tcp_bbr_rtt_scaling = 3                # 提高RTT敏感度（减少缓冲）
net.ipv4.tcp_slow_start_after_idle = 0          # 空闲不重置慢启动

# 3. 单线程性能（内存友好型）
net.ipv4.tcp_limit_output_bytes = 4194304       # 单次发送4MB（降低内存占用）
net.ipv4.tcp_single_stream_allowance = 33554432 # 单流限制32MB
net.ipv4.tcp_push_pending_frames = 1            # 立即发送pending帧
net.ipv4.tcp_nodelay = 1                        # 禁用Nagle算法

# 4. 网络设备队列（内存限制版）
net.core.netdev_max_backlog = 30000             # 接收队列3万（原20万）
net.core.dev_weight = 128                       # 降低设备处理权重
net.core.optmem_max = 2097152                   # 最大选项内存2MB
net.core.busy_poll = 0                          # 禁用忙轮询（节省CPU）
net.core.busy_read = 0                          # 禁用忙读（节省CPU）

# 5. 连接管理（内存受限优化）
net.core.somaxconn = 32768                      # 最大连接队列3万（原26万）
net.ipv4.tcp_max_syn_backlog = 16384            # SYN队列1.6万
net.ipv4.tcp_max_tw_buckets = 500000            # TIME_WAIT桶50万（原800万）
net.ipv4.tcp_fin_timeout = 5                    # 延长FIN等待（减少重建开销）
net.ipv4.tcp_tw_reuse = 1                       # 重用TIME_WAIT连接
net.ipv4.tcp_orphan_retries = 2                 # 适度重试（平衡稳定性与内存）

# 6. 超时与保活（内存优化）
net.ipv4.tcp_keepalive_time = 120               # 延长保活时间至120秒
net.ipv4.tcp_keepalive_intvl = 15               # 保活间隔15秒
net.ipv4.ip_local_port_range = 32768 65535      # 缩小端口范围（减少内存占用）

# 7. 内存管理（1GB专用配置）
vm.swappiness = 10                              # 适度启用交换（内存保护）
vm.min_free_kbytes = 65536                      # 保留64MB空闲内存（1GB合理值）
vm.dirty_ratio = 15                             # 降低脏页比率（避免OOM）
vm.dirty_background_ratio = 5                   # 降低后台脏页比率
vm.dirty_writeback_centisecs = 500              # 延长写回时间（5秒）
vm.page-cluster = 3                             # 启用适度页面聚类（节省内存）
vm.max_map_count = 65536                        # 降低内存映射限制

# 8. 系统限制（1GB内存适配）
fs.file-max = 524288                            # 文件描述符50万（原400万）
fs.nr_open = 1048576                            # 进程文件描述符100万
net.ipv4.ip_unprivileged_port_start = 1024      # 限制非特权端口

# 9. 处理器调度（低内存优化）
kernel.sched_migration_cost_ns = 200000         # 增加进程迁移成本（减少CPU消耗）
kernel.sched_autogroup_enabled = 1              # 启用自动分组（节省CPU）
kernel.sched_latency_ns = 4000000               # 调度延迟4ms（平衡CPU与延迟）

# 10. 硬件加速（内存友好型）
net.ipv4.tcp_tso = 1                            # 启用TCP分段卸载（节省CPU）
net.ipv4.tcp_gro = 1                            # 启用通用接收卸载
net.ipv4.tcp_lro = 0                            # 禁用大型接收卸载（节省内存）
    