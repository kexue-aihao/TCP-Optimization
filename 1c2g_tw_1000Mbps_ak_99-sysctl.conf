# 1000Mbps带宽1核2G内存VPS优化配置
# 核心原则：适配1核CPU性能瓶颈，在2G内存下最大化1000Mbps带宽利用率

# BDP计算（单核适配版）：
# 1000Mbps理论速度=125MB/s，RTT=20ms时BDP=125MB/s×0.02s=2.5MB
# 窗口范围按单核处理能力调整，内存占用控制在15%以内（约300MB）

# 1. TCP窗口核心配置（单核平衡型）
net.ipv4.tcp_rmem = 1048576 16777216 41943040   # 接收窗口：1MB - 16MB - 40MB
net.ipv4.tcp_wmem = 1048576 16777216 41943040   # 发送窗口：1MB - 16MB - 40MB
net.core.rmem_default = 8388608                 # 默认接收缓冲区8MB
net.core.wmem_default = 8388608                 # 默认发送缓冲区8MB
net.core.rmem_max = 41943040                    # 最大接收缓冲区40MB（2G内存安全值）
net.core.wmem_max = 41943040                    # 最大发送缓冲区40MB（2G内存安全值）
net.ipv4.tcp_window_scaling = 1                 # 启用窗口缩放
net.ipv4.tcp_moderate_rcvbuf = 1                # 启用智能缓冲区调整（单核保护）
net.ipv4.tcp_adv_win_scale = 2                  # 降低窗口缩放因子（适配单核）

# 2. BBR拥塞控制（单核优化）
net.ipv4.tcp_congestion_control = bbr
net.ipv4.tcp_bbr_high_gain = 2800000000         # 保守增益（避免单核过载）
net.ipv4.tcp_bbr_rtt_scaling = 3                # 提高RTT敏感度（减少计算量）
net.ipv4.tcp_slow_start_after_idle = 0           # 空闲不重置慢启动

# 3. 单线程性能（1核专用）
net.ipv4.tcp_limit_output_bytes = 4194304        # 单次发送4MB（匹配单核处理能力）
net.ipv4.tcp_single_stream_allowance = 33554432  # 单流限制32MB
net.ipv4.tcp_push_pending_frames = 1             # 立即发送pending帧（减少缓存）
net.ipv4.tcp_nodelay = 1                        # 禁用Nagle算法

# 4. 网络设备队列（单核适配）
net.core.netdev_max_backlog = 30000              # 接收队列3万（单核可处理上限）
net.core.dev_weight = 128                        # 设备处理权重（单核均衡值）
net.core.optmem_max = 2097152                    # 最大选项内存2MB
net.core.busy_poll = 0                           # 禁用忙轮询（节省单核CPU）
net.core.busy_read = 0                           # 禁用忙读（避免CPU空转）

# 5. 连接管理（1核2G适配）
net.core.somaxconn = 32768                       # 最大连接队列3.2万（单核可控范围）
net.ipv4.tcp_max_syn_backlog = 16384             # SYN队列1.6万
net.ipv4.tcp_max_tw_buckets = 500000             # TIME_WAIT桶50万（平衡内存与连接）
net.ipv4.tcp_fin_timeout = 4                     # FIN等待时间4秒（减少重建频率）
net.ipv4.tcp_tw_reuse = 1                        # 重用TIME_WAIT连接
net.ipv4.tcp_orphan_retries = 2                  # 适度重试（单核稳定性优先）

# 6. 超时与保活（单核优化）
net.ipv4.tcp_keepalive_time = 90                 # 保活探测时间90秒
net.ipv4.tcp_keepalive_intvl = 12                # 保活间隔12秒
net.ipv4.ip_local_port_range = 32768 65535       # 缩小端口范围（减少单核负担）

# 7. 内存管理（2G单核专用）
vm.swappiness = 5                                # 轻微启用交换（内存保护）
vm.min_free_kbytes = 65536                       # 保留64MB空闲内存（2G单核合理值）
vm.dirty_ratio = 15                              # 脏页比率15%（避免单核IO阻塞）
vm.dirty_background_ratio = 5                    # 后台脏页比率5%
vm.dirty_writeback_centisecs = 300               # 300ms写回脏页
vm.page-cluster = 3                              # 增强页面聚类（节省单核IO）
vm.max_map_count = 65536                         # 内存映射限制（单核适配）

# 8. 系统限制（1核约束）
fs.file-max = 524288                            # 文件描述符50万（单核处理上限）
fs.nr_open = 1048576                            # 进程文件描述符100万
net.ipv4.ip_unprivileged_port_start = 1024       # 限制非特权端口（减少安全检查）

# 9. 处理器调度（单核优化）
kernel.sched_migration_cost_ns = 500000          # 大幅提高迁移成本（禁止进程迁移）
kernel.sched_autogroup_enabled = 1               # 启用自动分组（优化单核调度）
kernel.sched_latency_ns = 4000000                # 调度延迟4ms（单核性能平衡）
kernel.sched_wakeup_granularity_ns = 1000000     # 唤醒粒度1ms

# 10. 硬件加速（单核卸载）
net.ipv4.tcp_tso = 1                             # 启用TCP分段卸载（关键：减轻单核负担）
net.ipv4.tcp_gro = 1                             # 启用通用接收卸载
net.ipv4.tcp_lro = 1                             # 启用大型接收卸载（单核依赖硬件加速）
    