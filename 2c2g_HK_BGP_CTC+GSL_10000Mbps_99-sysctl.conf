# 10Gbps带宽2核2G内存VPS优化配置
# 核心优化：强化单线程性能 + 控制RTT延迟
# 适用场景：对单流性能和延迟敏感的10Gbps高带宽场景

# TCP窗口核心配置（平衡吞吐与延迟）
net.ipv4.tcp_rmem = 4194304 83886080 134217728    # 更大初始窗口，适中最大窗口（降低延迟累积）
net.ipv4.tcp_wmem = 4194304 83886080 134217728
net.core.rmem_default = 67108864
net.core.wmem_default = 67108864
net.core.rmem_max = 134217728                     # 适度降低最大缓冲区（减少延迟）
net.core.wmem_max = 134217728
net.ipv4.tcp_window_scaling = 1
net.ipv4.tcp_moderate_rcvbuf = 1
net.ipv4.tcp_adv_win_scale = -2                   # 更积极的窗口扩展（降低RTT影响）
net.ipv4.tcp_low_latency = 1                      # 启用低延迟模式

# BBR拥塞控制（低延迟优化版）
net.ipv4.tcp_congestion_control = bbr
net.ipv4.tcp_bbr_high_gain = 3500000000           # 平衡增益（避免过度延迟）
net.ipv4.tcp_bbr_rtt_scaling = 1                  # 高RTT敏感度（及时响应延迟变化）
net.ipv4.tcp_slow_start_after_idle = 0
net.ipv4.tcp_no_metrics_save = 1                  # 不保存连接 metrics（减少单线程开销）

# 单线程性能强化（核心优化区）
net.ipv4.tcp_limit_output_bytes = 33554432        # 单次发送32MB（提升单流吞吐）
net.ipv4.tcp_single_stream_allowance = 268435456  # 单流限制256MB（提高单线程处理上限）
net.ipv4.tcp_push_pending_frames = 1              # 立即发送pending帧（减少延迟）
net.ipv4.tcp_nodelay = 1                          # 禁用Nagle算法（关键低延迟设置）
net.ipv4.tcp_autocorking = 0                      # 禁用自动 corking（减少小包延迟）
net.ipv4.tcp_invalid_ratelimit = 500              # 降低无效包处理频率（节省CPU）

# 网络设备队列（低延迟导向）
net.core.netdev_max_backlog = 200000              # 适度队列长度（避免缓冲延迟）
net.core.dev_weight = 512                         # 提高设备权重（加速单线程处理）
net.core.optmem_max = 16777216                    # 更大选项内存（支持复杂单流）
net.core.busy_poll = 200                          # 提高忙轮询（减少线程唤醒延迟）
net.core.busy_read = 200                          # 提高忙读（单线程快速处理）
net.core.default_qdisc = fq_codel                 # 使用FQ_Codel队列（主动控延迟）

# 连接管理（低延迟优化）
net.core.somaxconn = 131072
net.ipv4.tcp_max_syn_backlog = 65536
net.ipv4.tcp_max_tw_buckets = 2000000
net.ipv4.tcp_fin_timeout = 1                      # 极短FIN等待（快速回收资源）
net.ipv4.tcp_tw_reuse = 1
net.ipv4.tcp_orphan_retries = 0
net.ipv4.tcp_abort_on_overflow = 1                # 溢出时主动终止（避免延迟累积）

# 超时与保活（快速响应）
net.ipv4.tcp_keepalive_time = 30                  # 更短保活时间
net.ipv4.tcp_keepalive_intvl = 3                  # 更短保活间隔
net.ipv4.tcp_keepalive_probes = 3                 # 减少探测次数
net.ipv4.ip_local_port_range = 1024 65535

# 内存管理（低延迟配置）
vm.swappiness = 0                                 # 禁用交换（避免交换延迟）
vm.min_free_kbytes = 262144                       # 保留更多空闲内存（256MB）
vm.dirty_ratio = 10                               # 更低脏页比率（减少写延迟）
vm.dirty_background_ratio = 3                      # 更低后台脏页比率
vm.dirty_writeback_centisecs = 50                 # 50ms写回（快速刷盘）
vm.page-cluster = 0                               # 禁用页面聚类（消除预读延迟）
vm.max_map_count = 262144

# 系统限制
fs.file-max = 2097152
fs.nr_open = 4194304
net.ipv4.ip_unprivileged_port_start = 0

# 处理器调度（单线程优先）
kernel.sched_migration_cost_ns = 200000           # 提高迁移成本（减少线程切换）
kernel.sched_autogroup_enabled = 0
kernel.sched_latency_ns = 1000000                 # 1ms调度延迟（单线程快速响应）
kernel.sched_wakeup_granularity_ns = 250000       # 0.25ms唤醒粒度（提高响应速度）
kernel.sched_child_runs_first = 1                 # 子进程优先运行（减少阻塞）

# 硬件加速（单线程减负）
net.ipv4.tcp_tso = 1
net.ipv4.tcp_gro = 1
net.ipv4.tcp_lro = 1
net.ipv4.tcp_seg_timeout = 20                     # 缩短分段超时（减少延迟）
