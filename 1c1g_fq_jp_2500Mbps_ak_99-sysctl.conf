# 2000-2500Mbps对等带宽1核1G内存优化配置（平衡版）
# 解决高带宽下1核1G内存的性能瓶颈，兼顾单流吞吐量与系统稳定性

# BDP重新计算（针对1核1G硬件）：
# 2500Mbps = 312.5MB/s（理论最大速度）
# 假设RTT=20ms，所需窗口=312.5MB/s × 0.02s = 6.25MB
# 考虑1G内存限制，窗口上限控制在16MB（总内存1.6%）

# 1. TCP窗口核心优化（1核1G适配）
net.ipv4.tcp_rmem = 1048576 8388608 16777216  # 接收窗口：1MB - 8MB - 16MB（内存安全值）
net.ipv4.tcp_wmem = 1048576 8388608 16777216  # 发送窗口：1MB - 8MB - 16MB（1核处理上限）
net.core.rmem_default = 4194304              # 默认接收缓冲区4MB（平衡性能与内存）
net.core.wmem_default = 4194304              # 默认发送缓冲区4MB
net.core.rmem_max = 16777216                  # 最大接收缓冲区16MB（1G内存安全上限）
net.core.wmem_max = 16777216                  # 最大发送缓冲区16MB
net.ipv4.tcp_window_scaling = 1              # 启用窗口缩放（必须开启）
net.ipv4.tcp_moderate_rcvbuf = 1             # 启用自动调整缓冲区（1G内存保护）

# 2. BBR拥塞控制增强（1核优化）
net.ipv4.tcp_congestion_control = bbr
net.ipv4.tcp_bbr_high_gain = 2700000000      # 降低BBR增益（适配1核计算能力）
net.ipv4.tcp_bbr_rtt_scaling = 3             # 提高RTT敏感度（减少CPU开销）
net.ipv4.tcp_slow_start_after_idle = 0        # 空闲不重置慢启动（核心）
net.ipv4.tcp_no_metrics_save = 1              # 不保存连接状态（节省资源）

# 3. 单线程性能突破（1核适配）
net.ipv4.tcp_limit_output_bytes = 2097152     # 单次发送上限2MB（1核处理能力）
net.ipv4.tcp_single_stream_allowance = 16777216  # 单流允许带宽16MB（内存安全值）
net.ipv4.tcp_push_pending_frames = 1          # 立即发送 pending 帧
net.ipv4.tcp_nodelay = 1                      # 禁用Nagle算法（减少延迟）

# 4. 网络设备队列优化（1核适配）
net.core.netdev_max_backlog = 30000           # 接收队列3万（1核可处理上限）
net.core.dev_weight = 96                      # 设备处理权重（适配1核负载）
net.core.busy_poll = 0                        # 禁用忙轮询（节省1核CPU）
net.core.busy_read = 0                        # 禁用忙读机制（避免空转）

# 5. 连接管理强化（1G内存适配）
net.core.somaxconn = 32768                   # 最大连接队列3.2万（内存安全值）
net.ipv4.tcp_max_syn_backlog = 16384          # SYN队列1.6万（1核可控范围）
net.ipv4.tcp_max_tw_buckets = 500000         # TIME_WAIT桶50万（减少内存占用）
net.ipv4.tcp_fin_timeout = 4                  # 延长FIN等待时间至4秒（减少重建）
net.ipv4.tcp_tw_reuse = 1
net.ipv4.tcp_orphan_retries = 2               # 适度增加孤儿连接重试（稳定性）

# 6. 超时与保活优化（1核优化）
net.ipv4.tcp_keepalive_time = 90              # 保活探测时间延长至90秒
net.ipv4.tcp_keepalive_intvl = 12             # 保活间隔12秒（减少CPU消耗）
net.ipv4.ip_local_port_range = 32768 65535    # 缩小端口范围（节省内存）

# 7. 内存管理优化（1G专用）
vm.swappiness = 10                            # 适度启用交换（1G内存保护）
vm.min_free_kbytes = 98304                    # 保留96MB空闲内存（安全阈值）
vm.dirty_ratio = 15                           # 脏页比率15%（避免OOM）
vm.dirty_background_ratio = 5                 # 后台脏页比率5%
vm.dirty_writeback_centisecs = 300            # 300ms写回脏页（减少IO压力）
vm.page-cluster = 3                           # 启用页面聚类（节省内存）

# 8. 系统限制解除（1核适配）
fs.file-max = 524288                          # 文件描述符50万（1核处理上限）
fs.nr_open = 1048576                          # 进程文件描述符100万
net.ipv4.ip_unprivileged_port_start = 1024    # 限制非特权端口（减少开销）

# 9. 处理器调度优化（1核专用）
kernel.sched_migration_cost_ns = 1000000      # 禁止进程迁移（唯一核心）
kernel.sched_autogroup_enabled = 1            # 启用自动分组（优化1核调度）
kernel.sched_latency_ns = 5000000             # 调度延迟5ms（平衡负载）

# 10. 网络接口硬件加速（1核依赖）
net.ipv4.tcp_tso = 1                          # 启用TCP分段卸载（减轻1核负担）
net.ipv4.tcp_gro = 1                          # 启用通用接收卸载
    